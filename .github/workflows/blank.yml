name: Generate and Upload PDF

on:
  push:


jobs:
  generate-pdf:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14 # You can change the Node.js version as needed

      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install -y pandoc texlive-latex-base texlive-fonts-extra texlive-latex-extra texlive-fonts-recommended 

      - name: Generate Markdown File
        run: |
          
          sed -n '/^## Table of Contents$/q;p' manual/mainpage.md >> manual.md.fin
          cat SUMMARY.md >> manual.md.fin
          sed -n '/^## About OpenHD/,$p' manual/mainpage.md >> manual.md.fin
          echo "## About OpenHD" >> manual.md.fin
          cat introduction.md >> manual.md.fin
          cat downloads.md >> manual.md.fin
          echo "#General"
          echo " --------------- "
          echo " --------------- "
          cat general/features.md >> manual.md.fin
          cat general/OpenHD-vs-Alternatives.md >> manual.md.fin
          cat general/troubleshooting.md >> manual.md.fin
          cat general/faq.md >> manual.md.fin
          cat general/software-faq.md >> manual.md.fin
          cat general/contributing.md >> manual.md.fin
          cat general/team.md >> manual.md.fin
          echo "#Installation"
          echo " --------------- "
          echo " --------------- "
          cat installation-guide.md >> manual.md.fin
          echo "#Hardware"
          echo " --------------- "
          echo " --------------- "          


          # Initialize variables
          output_file=""
          output_data=""

          # Read the SUMMARY.md file line by line
          while IFS= read -r line; do
            if [[ $line == "## "* ]]; then
              # If a line starts with "##", create a new output file
              if [ -n "$output_file" ]; then
                echo -e "$output_data" > "$output_file"
              fi
              output_file="${line##"## "}"
              output_data=""
            else
              # Append the line to the current output data
              output_data+="$line\n"
            fi
          done < "SUMMARY.md"

          # Write the last part
          if [ -n "$output_file" ]; then
            echo -e "$output_data" > "$output_file"
          fi         
          ls -a 
          mv manual.md.fin manual.md

      - name: Generate PDF
        run: |
          pandoc -s manual.md -o manual.pdf

      - name: Upload PDF as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: manual
          path: manual.pdf
